{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about-us/about-us.component.css","webpack:///./src/app/about-us/about-us.component.html","webpack:///./src/app/about-us/about-us.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/contact/contact.component.css","webpack:///./src/app/contact/contact.component.html","webpack:///./src/app/contact/contact.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/event-create/event-create.component.css","webpack:///./src/app/event-create/event-create.component.html","webpack:///./src/app/event-create/event-create.component.ts","webpack:///./src/app/event-edit/event-edit.component.css","webpack:///./src/app/event-edit/event-edit.component.html","webpack:///./src/app/event-edit/event-edit.component.ts","webpack:///./src/app/events/events.component.css","webpack:///./src/app/events/events.component.html","webpack:///./src/app/events/events.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/registration/registration.component.css","webpack:///./src/app/registration/registration.component.html","webpack:///./src/app/registration/registration.component.ts","webpack:///./src/app/services/auth.guard.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/email.service.ts","webpack:///./src/app/services/event.service.ts","webpack:///./src/app/services/registeration.service.ts","webpack:///./src/app/services/toastr.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"@media (min-width: 34em) {\\r\\n    .conatinerMargin {\\r\\n        margin-top:20%;\\r\\n        margin-bottom: 7%;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media (min-width: 48em) {\\r\\n    .conatinerMargin {\\r\\n        margin-top:5%;\\r\\n        margin-bottom: 7%;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media (min-width: 62em) {\\r\\n    .conatinerMargin {\\r\\n        margin-top:5%;\\r\\n        margin-bottom: 7%;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media (min-width: 75em) {\\r\\n    .conatinerMargin {\\r\\n        margin-top:5%;\\r\\n        margin-bottom: 7%;\\r\\n    }\\r\\n}\"","module.exports = \"\\n<div class= \\\"container conatinerMargin\\\">\\n    <p>\\n        Mayur Patil - 12868055\\n      </p>\\n      \\n      \\n      <p>\\n        Sunit Singh- 12845994\\n      </p>\\n      \\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.css']\n})\nexport class AboutUsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\r\\n<!--This page would be used as an outlet to display content dynamically\\r\\n    we would be using routing feature of angular to display content, \\r\\n    please check app.module.ts to view routing information-->\\r\\n    <app-header></app-header>\\r\\n    <router-outlet></router-outlet>\\r\\n    <ngx-toasta [position]=\\\"'top-center'\\\"></ngx-toasta>\\r\\n    <app-footer></app-footer>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'SydneyHappening';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpModule } from '@angular/http';\r\nimport { NgModule, } from '@angular/core';\r\nimport { HttpClientModule , HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastaModule } from 'ngx-toasta';\r\nimport { AuthGuard } from './services/auth.guard';\r\n\r\nimport { EventService } from './services/event.service';\r\nimport { AuthenticationService } from './services//authentication.service';\r\nimport { RegisterationService } from './services/registeration.service';\r\nimport { EmailService } from './services/email.service';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { EventsComponent } from './events/events.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { EventCreateComponent } from './event-create/event-create.component';\r\nimport { EventEditComponent } from './event-edit/event-edit.component';\r\nimport { AboutUsComponent } from './about-us/about-us.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    DashboardComponent,\r\n    RegistrationComponent,\r\n    EventsComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    ContactComponent,\r\n    EventCreateComponent,\r\n    EventEditComponent,\r\n    AboutUsComponent\r\n  ],\r\n\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpModule,\r\n    HttpClientModule,\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    ToastaModule,\r\n    RouterModule.forRoot([\r\n      { path: '', \r\n        component: LoginComponent \r\n      },\r\n      { path: 'dashboard', \r\n        component: DashboardComponent,\r\n        canActivate: [AuthGuard]\r\n      },\r\n      { path: 'events', \r\n        component: EventsComponent, \r\n        data: {title: 'Event-Details'},\r\n        canActivate: [AuthGuard] \r\n      },\r\n      { path: 'registration', \r\n        component: RegistrationComponent \r\n      },\r\n      { path: 'contact', component: ContactComponent },\r\n      { path: 'eventCreate',\r\n        component: EventCreateComponent,\r\n        canActivate: [AuthGuard] \r\n      },\r\n      { path: 'eventEdit',\r\n      component: EventEditComponent,\r\n      canActivate: [AuthGuard] \r\n    },\r\n    { path: 'about', \r\n    component: AboutUsComponent \r\n  }\r\n    ])\r\n  ],\r\n  providers: [EventService, AuthenticationService, RegisterationService, EmailService, AuthGuard],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"body{\\r\\n    background: -webkit-linear-gradient(left, #0072ff, #00c6ff);\\r\\n}\\r\\n.contact-form{\\r\\n    background: #E8E4E4;;\\r\\n    margin-top: 10%;\\r\\n    margin-bottom: 5%;\\r\\n    width: 70%;\\r\\n}\\r\\n.contact-form .form-control{\\r\\n    border-radius:1rem;\\r\\n}\\r\\n.contact-image{\\r\\n    text-align: center;\\r\\n}\\r\\n.contact-image img{\\r\\n    border-radius: 6rem;\\r\\n    width: 11%;\\r\\n    margin-top: -3%;\\r\\n    -webkit-transform: rotate(29deg);\\r\\n            transform: rotate(29deg);\\r\\n}\\r\\n.contact-form form{\\r\\n    padding: 14%;\\r\\n}\\r\\n.contact-form form .row{\\r\\n    margin-bottom: -7%;\\r\\n}\\r\\n.contact-form h3{\\r\\n    margin-bottom: 8%;\\r\\n    margin-top: -10%;\\r\\n    text-align: center;\\r\\n    color: #0062cc;\\r\\n}\\r\\n.contact-form .btnContact {\\r\\n    width: 50%;\\r\\n    border: none;\\r\\n    border-radius: 1rem;\\r\\n    padding: 1.5%;\\r\\n    background: #dc3545;\\r\\n    font-weight: 600;\\r\\n    color: #fff;\\r\\n    cursor: pointer;\\r\\n}\\r\\n.btnContactSubmit\\r\\n{\\r\\n    width: 50%;\\r\\n    border-radius: 1rem;\\r\\n    padding: 1.5%;\\r\\n    color: #fff;\\r\\n    background-color: #0062cc;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n}\"","module.exports = \"<div class=\\\"container contact-form\\\">\\r\\n  <div class=\\\"contact-image\\\">\\r\\n      <img src=\\\"https://image.ibb.co/kUagtU/rocket_contact.png\\\" alt=\\\"rocket_contact\\\"/>\\r\\n  </div>\\r\\n  <form [formGroup]=\\\"sendMessage\\\">\\r\\n      <h3>Drop Us a Message</h3>\\r\\n     <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <input type=\\\"text\\\" name=\\\"txtName\\\" class=\\\"form-control\\\" placeholder=\\\"Your Name *\\\" \\r\\n                  formControlName = \\\"name\\\" value=\\\"\\\" maxlength=\\\"30\\\"/>  \\r\\n              </div>\\r\\n                    <p *ngIf = \\\"isValid('name')\\\" class=\\\"text-danger align-middle\\\">Name is required</p>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <input type=\\\"text\\\" name=\\\"txtEmail\\\" class=\\\"form-control\\\" placeholder=\\\"Your Email *\\\" \\r\\n                  formControlName = \\\"email\\\" value=\\\"\\\" maxlength=\\\"30\\\" required/>\\r\\n              </div>\\r\\n                <p *ngIf = \\\"isValid('email')\\\" class=\\\"text-danger align-middle\\\">Email is required</p>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <input type=\\\"number\\\" name=\\\"txtPhone\\\" class=\\\"form-control\\\" placeholder=\\\"Your Phone Number *\\\" \\r\\n                  formControlName = \\\"phone\\\" value=\\\"\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\"/> \\r\\n              </div>\\r\\n              <p *ngIf = \\\"isValid('phone')\\\" class=\\\"text-danger align-middle\\\">Contact number is required</p>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <input type=\\\"submit\\\" (click) = \\\"sendEmail()\\\" name=\\\"btnSubmit\\\" [disabled]=\\\"sendMessage.invalid || isBusy\\\" class=\\\"btnContact\\\" value=\\\"Send Message\\\" />\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <textarea name=\\\"txtMsg\\\" class=\\\"form-control\\\" placeholder=\\\"Your Message *\\\" \\r\\n                  formControlName = \\\"message\\\" style=\\\"width: 100%; height: 150px;\\\" maxlength=\\\"200\\\"></textarea>                 \\r\\n              </div>\\r\\n              <p *ngIf = \\\"isValid('message')\\\" class=\\\"text-danger align-middle\\\">Message is required</p>\\r\\n          </div>\\r\\n      </div>\\r\\n  </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport {EmailService } from '../services/email.service';\r\nimport { AbstractControl, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ToastrService } from '../services/toastr.service';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.css']\r\n})\r\nexport class ContactComponent implements OnInit {\r\n\r\n  sendMessage: FormGroup;\r\n  isBusy:boolean=false;\r\n\r\n  constructor(private emailService: EmailService,  private showMessage: ToastrService) { \r\n      this.sendMessage = new FormGroup({\r\n      name: new FormControl(null, Validators.required),\r\n      email: new FormControl(null, Validators.email),\r\n      phone: new FormControl(null,Validators.required),\r\n      message: new FormControl(null, Validators.required)\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  \r\n  isValid(controlName) {\r\n    return this.sendMessage.get(controlName).invalid && this.sendMessage.get(controlName).touched;\r\n  }\r\n\r\n  sendEmail(){\r\n    this.isBusy = true;\r\n    if(this.sendMessage.valid) {\r\n      this.emailService.sendEmail(this.sendMessage.value).subscribe( response => {\r\n        this.showMessage.showSuccess(\"Your message has been sent to the admins.\");\r\n      },\r\n      err => {\r\n        this.showMessage.showError(\"An error occured, please send messag again\");\r\n      })\r\n      this.isBusy=false;\r\n    }\r\n  \r\n  }\r\n}\r\n","module.exports = \".deleteButton{\\r\\n    margin-left: 10px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n.editButton{\\r\\n    margin-left:35px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n@media (min-width: 34em) {\\r\\n    .card-columns {\\r\\n        -webkit-column-count: 2;\\r\\n        column-count: 2;\\r\\n    }\\r\\n}\\r\\n@media (min-width: 48em) {\\r\\n    .card-columns {\\r\\n        -webkit-column-count: 3;\\r\\n        column-count: 3;\\r\\n    }\\r\\n}\\r\\n@media (min-width: 62em) {\\r\\n    .card-columns {\\r\\n        -webkit-column-count: 4;\\r\\n        column-count: 4;\\r\\n    }\\r\\n}\\r\\n@media (min-width: 75em) {\\r\\n    .card-columns {\\r\\n        -webkit-column-count: 5;\\r\\n        column-count: 5;\\r\\n    }\\r\\n}\\r\\n@media (min-width: 34em) {\\r\\n    .conatinerMargin {\\r\\n        margin-top:20%;\\r\\n        margin-bottom: 7%;\\r\\n    }\\r\\n}\\r\\n@media (min-width: 48em) {\\r\\n    .conatinerMargin {\\r\\n        margin-top:5%;\\r\\n        margin-bottom: 7%;\\r\\n    }\\r\\n}\\r\\n@media (min-width: 62em) {\\r\\n    .conatinerMargin {\\r\\n        margin-top:5%;\\r\\n        margin-bottom: 7%;\\r\\n    }\\r\\n}\\r\\n@media (min-width: 75em) {\\r\\n    .conatinerMargin {\\r\\n        margin-top:5%;\\r\\n        margin-bottom: 7%;\\r\\n    }\\r\\n}\"","module.exports = \" <div class=\\\"container conatinerMargin\\\">\\r\\n      <a href=\\\"#\\\" class=\\\"btn btn-sm btn-success pull-right\\\" routerLink=\\\"/eventCreate\\\">Add New Event</a>\\r\\n      <h2>My Dashboard</h2>\\r\\n      <h4>Welcome {{user}}</h4>    \\r\\n      <div class=\\\"card-columns\\\">\\r\\n        <div class=\\\"card\\\" *ngFor=\\\"let event of eventList\\\">\\r\\n          <img class=\\\"card-img-right flex-auto d-none d-lg-block\\\" alt=\\\"Thumbnail [200x250]\\\" src=\\\"//placeimg.com/250/250/arch\\\" style=\\\"width: 205px; height: 200px;\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <h5 class=\\\"card-title\\\">{{event.EventName}}</h5>\\r\\n            <div class=\\\"btn-group\\\"> \\r\\n              <!--More Details-->       \\r\\n              <a class=\\\"btn btn-outline-primary btn-sm\\\" routerLink=\\\"/events\\\" (click)=\\\"eventDetails(event._id)\\\" role=\\\"button\\\" href=\\\"#\\\">More Details</a><br/>           \\r\\n              <!--Edit Event-->\\r\\n              <a *ngIf = \\\"IsAdmin\\\" class =\\\"editButton\\\" title=\\\"Edit\\\" role=\\\"button\\\" (click)=\\\"updateEvent(event._id)\\\"><span class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></span></a>   \\r\\n              <!--Delete Event-->\\r\\n              <a *ngIf = \\\"IsAdmin\\\" class=\\\"deleteButton\\\" title=\\\"Delete\\\" role=\\\"button\\\" data-backdrop=\\\"static\\\" data-keyboard=\\\"false\\\" data-toggle=\\\"modal\\\" data-target=\\\"#deleteModal\\\" (click) =\\\"selectForDeletion(event._id)\\\"><span class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></span></a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div> \\r\\n      \\r\\n      \\r\\n      <h4>Registered Events</h4>    \\r\\n      <div class=\\\"card-columns\\\" *ngIf=\\\"showEvents\\\">\\r\\n        <div class=\\\"card\\\" *ngFor=\\\"let event of registeredList\\\">\\r\\n          <img class=\\\"card-img-right flex-auto d-none d-lg-block\\\" alt=\\\"Thumbnail [200x250]\\\" src=\\\"//placeimg.com/250/250/arch\\\" style=\\\"width: 205px; height: 200px;\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <h5 class=\\\"card-title\\\">{{event.EventName}}</h5>\\r\\n            <div class=\\\"btn-group\\\"> \\r\\n              <!--More Details-->       \\r\\n              <a class=\\\"btn btn-outline-primary btn-sm\\\" routerLink=\\\"/events\\\" (click)=\\\"eventDetails(event._id)\\\" role=\\\"button\\\" href=\\\"#\\\">More Details</a><br/>           \\r\\n              <!--Edit Event-->\\r\\n              <a *ngIf = \\\"IsAdmin\\\" class =\\\"editButton\\\" title=\\\"Edit\\\" role=\\\"button\\\" (click)=\\\"updateEvent(event._id)\\\"><span class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></span></a>   \\r\\n              <!--Delete Event-->\\r\\n              <a *ngIf = \\\"IsAdmin\\\" class=\\\"deleteButton\\\" title=\\\"Delete\\\" role=\\\"button\\\" data-backdrop=\\\"static\\\" data-keyboard=\\\"false\\\" data-toggle=\\\"modal\\\" data-target=\\\"#deleteModal\\\" (click) =\\\"selectForDeletion(event._id)\\\"><span class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></span></a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <p *ngIf=\\\"showEvents == false\\\">You are not registered for any event</p> \\r\\n\\r\\n  </div>\\r\\n\\r\\n<!--Delete Modal PopUp-->\\r\\n<div class=\\\"modal\\\" id=\\\"deleteModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"deleteModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n        <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h5 class=\\\"modal-title\\\">Delete Event</h5>\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n              <p>Are you sure you want to delete this event?</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\" (click)=\\\"deleteEvent()\\\">Delete</button>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n</div>\\r\\n<!--Delete Modal PopUp ends-->\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { EventService } from '../services/event.service';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { UserData } from '../models/userData';\r\nimport { ToastrService } from '../services/toastr.service';\r\nimport { Event } from '../models/Event';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  \r\n  \r\n  eventList: Event []; \r\n  IsAdmin:boolean;\r\n  registeredList: any;\r\n  showEvents: boolean= false;\r\n\r\n  userEventList: Event[];\r\n  userData: UserData = {\r\n    userID: '',\r\n    firstName: ''\r\n  };\r\n  user = '';\r\n\r\n  constructor(private eventService: EventService, private router: Router, private showMessage: ToastrService) {\r\n    this.IsAdmin = localStorage.getItem('IsAdmin').toLowerCase() =='true' ? true : false;    \r\n  }\r\n\r\n  ngOnInit() {\r\n   this.user = localStorage.getItem('firstName');\r\n   this.getAllEvents();\r\n   this.getUserEvents();\r\n  }\r\n\r\n  getAllEvents(){\r\n    //Retreives events from the API    \r\n    this.eventService.getEvents().subscribe(events => { \r\n      this.eventList = events;\r\n    });\r\n  }\r\n\r\n  //get events registered to by user\r\n  getUserEvents() {\r\n    this.userData.firstName = localStorage.getItem('firstName');\r\n    this.userData.userID = localStorage.getItem('userID');\r\n    this.eventService.getUserEvents(this.userData).subscribe( events => {\r\n      if(events){\r\n        this.registeredList = events;\r\n        this.showEvents=true;\r\n      }\r\n      else{\r\n        this.showEvents=false;\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n//Gets Event by ID\r\n  eventDetails(eventID:string){\r\n    let navigationExtras: NavigationExtras = {\r\n            queryParams: {\r\n                \"eventID\": eventID\r\n            }\r\n        };\r\n    this.router.navigate(['/events'], navigationExtras);\r\n  }\r\n\r\n  //Update Event by Event ID\r\n  updateEvent(eventID:string){    \r\n    let navigationExtras: NavigationExtras = {\r\n      queryParams: {\r\n          \"eventID\": eventID\r\n      }\r\n  };\r\n    this.router.navigate(['/eventEdit'], navigationExtras);\r\n  }\r\n\r\n  selectForDeletion(eventID: string)\r\n  {    \r\n    localStorage.setItem(\"eventID\",eventID);    \r\n  }\r\n\r\n  \r\n//Deletes Event by ID\r\n  deleteEvent(){    \r\n    const _id = localStorage.getItem(\"eventID\");\r\n    this.eventService.deleteEvent(_id).subscribe(data=>{\r\n      let message = data;\r\n      if(message=='success')\r\n        {\r\n          localStorage.removeItem(\"eventID\");\r\n          this.showMessage.showSuccess(\"Event deleted successfully\");\r\n          this.getAllEvents();\r\n        }\r\n        else{\r\n          this.showMessage.showError(\"Event you trying to delete does not exist\");\r\n        }\r\n    }, err=> {\r\n      this.showMessage.showError(err);\r\n    });\r\n  }\r\n}\r\n","module.exports = \".eventFormPosition{\\r\\n    margin-top:5%;\\r\\n    margin-bottom: 7%;\\r\\n}\"","module.exports = \"<div class=\\\"container eventFormPosition\\\">\\n  <form class=\\\"form-horizontal\\\" role=\\\"form\\\" #eventData = \\\"ngForm\\\" (ngSubmit)= \\\"addEvent(eventData)\\\">\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\"></div>\\n          <div class=\\\"col-md-6\\\">\\n              <h3 class=\\\"alignHeader\\\">Add New Event</h3>\\n              <hr>\\n          </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\"></div>\\n          <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-form-label\\\" for=\\\"eventName\\\">Event Name</label>\\n                  <input type=\\\"text\\\" name=\\\"eventName\\\" class=\\\"form-control\\\" id=\\\"eventName\\\" maxlength=\\\"20\\\" #name=\\\"ngModel\\\" ngModel required autofocus>\\n              </div>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-control-feedback\\\">\\n                <span *ngIf = \\\"name.invalid && name.touched\\\" class=\\\"text-danger align-middle\\\">\\n                    <i class=\\\"fa fa-close\\\"></i> Event Name is required. \\n                </span>\\n            </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-3\\\"></div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\" for=\\\"eventVenue\\\">Event Venue</label>\\n                <input type=\\\"text\\\" name=\\\"eventVenue\\\" class=\\\"form-control\\\" id=\\\"eventVenue\\\" maxlength=\\\"50\\\" #venue=\\\"ngModel\\\" ngModel required>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-control-feedback\\\">\\n                <span *ngIf = \\\"venue.invalid && venue.touched\\\" class=\\\"text-danger align-middle\\\">\\n                    <i class=\\\"fa fa-close\\\"></i> Event Venue is required. \\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\"></div>\\n      <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"col-form-label\\\" for=\\\"eventDate\\\">Event Date</label>\\n              <span [owlDateTimeTrigger]=\\\"dt1\\\"><input [owlDateTime]=\\\"dt1\\\" name=\\\"eventDate\\\" maxlength=\\\"10\\\" class=\\\"form-control\\\" #date=\\\"ngModel\\\" ngModel required></span>              \\n              <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt1></owl-date-time>              \\n          </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-control-feedback\\\">\\n            <span *ngIf = \\\"date.invalid && date.touched\\\" class=\\\"text-danger align-middle\\\">\\n                <i class=\\\"fa fa-close\\\"></i> Event Date is required. \\n            </span>\\n        </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-form-label\\\" for=\\\"eventTime\\\">Event Time</label>\\n            <span [owlDateTimeTrigger]=\\\"dt2\\\"><input [owlDateTime]=\\\"dt2\\\" name=\\\"eventTime\\\" maxlength=\\\"6\\\" class=\\\"form-control\\\" #time=\\\"ngModel\\\" ngModel required></span>              \\n            <owl-date-time [pickerType]=\\\"'timer'\\\" #dt2></owl-date-time>              \\n        </div>\\n    </div>\\n    <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-control-feedback\\\">\\n            <span *ngIf = \\\"time.invalid && time.touched\\\" class=\\\"text-danger align-middle\\\">\\n                <i class=\\\"fa fa-close\\\"></i> Event Time is required. \\n            </span>\\n        </div>\\n    </div>\\n</div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-form-label\\\" for=\\\"availableSeats\\\">Seats</label>\\n            <input type=\\\"number\\\" name=\\\"availableSeats\\\" class=\\\"form-control\\\" min=\\\"1\\\" id=\\\"availableSeats\\\" max=\\\"1000\\\" oninput=\\\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\\\" maxlength=\\\"4\\\" #seats=\\\"ngModel\\\" ngModel required>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-control-feedback\\\">\\n            <span *ngIf = \\\"seats.invalid && seats.touched\\\" class=\\\"text-danger align-middle\\\">\\n                <i class=\\\"fa fa-close\\\"></i> Available Seats is required. \\n            </span>\\n        </div>\\n    </div>\\n</div>     \\n      <div class=\\\"row\\\" style=\\\"padding-top: 1rem\\\">\\n          <div class=\\\"col-md-3\\\"></div>\\n          <div class=\\\"col-md-6\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block btn-success\\\" [disabled]=\\\"eventData.invalid || isBusy\\\"><i class=\\\"fa fa-sign-in\\\"></i> Add Event</button>\\n          </div>\\n      </div>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { EventService } from '../services/event.service';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { ToastrService } from '../services/toastr.service';\n\n@Component({\n  selector: 'app-event-create',\n  templateUrl: './event-create.component.html',\n  styleUrls: ['./event-create.component.css']\n})\nexport class EventCreateComponent implements OnInit {\n\n  constructor(private eventService : EventService,private router: Router,private showMessage:ToastrService) { }\n\n  isBusy:boolean= false;\n\n  ngOnInit() {\n  }\n\n  addEvent(eventData) {\n   this.isBusy=true;\n    var eventInfo = {\n      EventName: eventData.value.eventName,\n      EventVenue: eventData.value.eventVenue,\n      EventDate: this.getFormattedDate(eventData.value.eventDate),\n      EventTime: this.getFormattedTime(eventData.value.eventTime),\n      AvailableSeats: eventData.value.availableSeats,\n      CreatedBy: localStorage.getItem('email')\n    };\n    this.eventService.addEvent(eventInfo).subscribe(event => {\n      if(event == \"success\"){\n        this.getAllEvents();\n        this.showMessage.showSuccess(\"Event added successfully\");\n      }\n      else {\n        this.showMessage.showError(\"Failed to save your event\");\n      }\n      this.isBusy=false;\n    });\n   \n  }\n\n  getAllEvents(){\n    this.eventService.getEvents().subscribe(events => {\n      this.router.navigate(['/dashboard']);\n    })\n  }\n\n  getFormattedDate(date){\n    var formattedDate = new Date(date)\n    var day = formattedDate.getDate();\n    var month = formattedDate.getMonth() + 1;\n    var year = formattedDate.getFullYear();\n    return day + \"-\" + month + \"-\" + year\n  }\n\n  getFormattedTime(time) {\n    var hours = time.getHours();\n    var mins = time.getMinutes();\n    var seconds = time.getSeconds();\n    return hours + \":\" + mins;  \n  }\n    \n\n}\n","module.exports = \".eventFormPosition{\\r\\n    margin-top:5%;\\r\\n    margin-bottom: 7%;\\r\\n}\"","module.exports = \"<div class=\\\"container eventFormPosition\\\">\\n    <form class=\\\"form-horizontal\\\" role=\\\"form\\\" #eventData = \\\"ngForm\\\" (ngSubmit)= \\\"updateEvent(event._id,eventData)\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\"></div>\\n            <div class=\\\"col-md-6\\\">\\n                <h3 class=\\\"alignHeader\\\">Update Event</h3>\\n                <hr>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\"></div>\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"col-form-label\\\" for=\\\"eventName\\\">Event Name</label>\\n                    <input type=\\\"text\\\" name=\\\"eventName\\\" class=\\\"form-control\\\" maxlength=\\\"20\\\" id=\\\"eventName\\\" [(ngModel)]=\\\"event.EventName\\\" #name=\\\"ngModel\\\" ngModel required autofocus>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n                <div class=\\\"form-control-feedback\\\">\\n                    <span *ngIf = \\\"name.invalid && name.touched\\\" class=\\\"text-danger align-middle\\\">\\n                        <i class=\\\"fa fa-close\\\"></i> Event Name is required. \\n                    </span>\\n                </div>\\n            </div>\\n        </div>\\n  \\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\"></div>\\n          <div class=\\\"col-md-6\\\">\\n              <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-form-label\\\" for=\\\"eventVenue\\\">Event Venue</label>\\n                  <input type=\\\"text\\\" name=\\\"eventVenue\\\" class=\\\"form-control\\\" maxlength=\\\"50\\\" id=\\\"eventVenue\\\" [(ngModel)]=\\\"event.EventVenue\\\" #venue=\\\"ngModel\\\" ngModel required>\\n              </div>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-control-feedback\\\">\\n                <span *ngIf = \\\"venue.invalid && venue.touched\\\" class=\\\"text-danger align-middle\\\">\\n                    <i class=\\\"fa fa-close\\\"></i> Event Venue is required. \\n                </span>\\n            </div>\\n        </div>\\n      </div>\\n  \\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-3\\\"></div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-form-label\\\" for=\\\"eventDate\\\">Event Date</label>\\n                <span [owlDateTimeTrigger]=\\\"dt1\\\"><input [owlDateTime]=\\\"dt1\\\" maxlength=\\\"10\\\" name=\\\"eventDate\\\" [(ngModel)]=\\\"event.EventDate\\\" class=\\\"form-control\\\" #date=\\\"ngModel\\\" ngModel required></span>              \\n                <owl-date-time [pickerType]=\\\"'calendar'\\\" #dt1></owl-date-time>              \\n            </div>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n            <div class=\\\"form-control-feedback\\\">\\n                <span *ngIf = \\\"date.invalid && date.touched\\\" class=\\\"text-danger align-middle\\\">\\n                    <i class=\\\"fa fa-close\\\"></i> Event Date is required. \\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n  \\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\"></div>\\n      <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"col-form-label\\\" for=\\\"eventTime\\\">Event Time</label>\\n              <span [owlDateTimeTrigger]=\\\"dt2\\\"><input [owlDateTime]=\\\"dt2\\\"  maxlength=\\\"6\\\" name=\\\"eventTime\\\" [(ngModel)]=\\\"event.EventTime\\\" class=\\\"form-control\\\" #time=\\\"ngModel\\\" ngModel required></span>              \\n              <owl-date-time [pickerType]=\\\"'timer'\\\" #dt2></owl-date-time>              \\n          </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-control-feedback\\\">\\n            <span *ngIf = \\\"time.invalid && time.touched\\\" class=\\\"text-danger align-middle\\\">\\n                <i class=\\\"fa fa-close\\\"></i> Event Time is required. \\n            </span>\\n        </div>\\n    </div>\\n  </div>\\n  \\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\"></div>\\n      <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"col-form-label\\\" for=\\\"availableSeats\\\">Seats</label>\\n              <input type=\\\"number\\\" name=\\\"availableSeats\\\" class=\\\"form-control\\\" min=\\\"1\\\" id=\\\"availableSeats\\\" max=\\\"1000\\\" oninput=\\\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\\\" maxlength=\\\"4\\\" id=\\\"availableSeats\\\" [(ngModel)]=\\\"event.AvailableSeats\\\" #seats=\\\"ngModel\\\" ngModel required>\\n          </div>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"form-control-feedback\\\">\\n            <span *ngIf = \\\"seats.invalid && seats.touched\\\" class=\\\"text-danger align-middle\\\">\\n                <i class=\\\"fa fa-close\\\"></i> Available Seats is required. \\n            </span>\\n        </div>\\n    </div>\\n  </div>     \\n        <div class=\\\"row\\\" style=\\\"padding-top: 1rem\\\">\\n            <div class=\\\"col-md-3\\\"></div>\\n            <div class=\\\"col-md-6\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-warning\\\" [disabled]=\\\"eventData.invalid || isBusy\\\">Update Event</button>\\n                <button type=\\\"submit\\\" routerLink=\\\"/dashboard\\\" class=\\\"btn btn-sm btn-secondary pull-right\\\">Cancel</button>\\n            </div>\\n        </div>\\n    </form>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { EventService } from '../services/event.service';\nimport { ActivatedRoute,Router } from '@angular/router';\nimport { ToastrService } from '../services/toastr.service';\n\n@Component({\n  selector: 'app-event-edit',\n  templateUrl: './event-edit.component.html',\n  styleUrls: ['./event-edit.component.css']\n})\nexport class EventEditComponent implements OnInit {\n\n  eventID: string;\n  event:Event;\n  constructor(private eventService : EventService, private router : ActivatedRoute, private showMessage:ToastrService,private route:Router) { }\n\n  isBusy:boolean= false;\n\n  ngOnInit() {\n    this.getEvent(this.router.queryParams.subscribe(params => {this.eventID = params['eventID']}));\n  }\n\n  getEvent(eventID){\n    this.eventService.getEvent(this.eventID).subscribe(event=> {\n      this.event = event;\n    })\n  }\n\n  updateEvent(eventID, eventData){\n    this.isBusy = true;\n    var eventInfo = {\n      _id: eventID,\n      EventName: eventData.value.eventName,\n      EventVenue: eventData.value.eventVenue,\n      EventDate: this.getFormattedDate(eventData.value.eventDate),\n      EventTime: this.getFormattedTime(eventData.value.eventTime),\n      AvailableSeats: eventData.value.availableSeats,\n      CreatedBy: localStorage.getItem('email')\n    };\n    this.eventService.updateEvent(eventID,eventInfo).subscribe(event=>{\n      if(event == 'success'){\n        this.showMessage.showSuccess(\"Event updated successfully\")\n        this.route.navigate([\"/dashboard\"]);\n      }\n      this.isBusy = false;\n    });\n  }\n\n  getFormattedDate(date){\n    var formattedDate = new Date(date)\n    var day = formattedDate.getDate();\n    var month = formattedDate.getMonth() + 1;\n    var year = formattedDate.getFullYear();\n    return day + \"-\" + month + \"-\" + year\n  }\n\n  getFormattedTime(time) {\n    var hours = time.getHours();\n    var mins = time.getMinutes();\n    var seconds = time.getSeconds();\n    return hours + \":\" + mins;  \n  }\n\n}\n","module.exports = \".conatinerMargin{\\r\\n    margin-top:5%;\\r\\n    margin-bottom:20%;\\r\\n}\\r\\n.textMargin{\\r\\n    margin-left:50%;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container conatinerMargin\\\">\\r\\n  \\r\\n  <h2>Event Details</h2>   \\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12\\\" >\\r\\n     <div class=\\\"card flex-md-row mb-4 shadow-sm h-md-250\\\">\\r\\n        <div class=\\\"card-body d-flex flex-column align-items-start\\\">\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <img class=\\\"card-img-right flex-auto d-none d-lg-block\\\" alt=\\\"Thumbnail [200x250]\\\" src=\\\"//placeimg.com/250/250/arch\\\" style=\\\"width: 400px; height: 400px;\\\">\\r\\n          </div>\\r\\n          <div class=\\\"col-md-5 textMargin\\\">\\r\\n            <h3 class=\\\"d-inline-block mb-2 text-dark\\\">Event Name: {{event.EventName}}</h3>\\r\\n            <h3 class=\\\"d-inline-block mb-2 text-dark\\\">Place: {{event.EventVenue}}</h3>\\r\\n            <h3 class=\\\"d-inline-block mb-2 text-dark\\\">Date: {{event.EventDate}}</h3><br/>\\r\\n            <h3 class=\\\"d-inline-block mb-2 text-dark\\\">Time: {{event.EventTime}}</h3><br/>\\r\\n            <h3 class=\\\"d-inline-block mb-2 text-dark\\\">Available Seats: {{event.AvailableSeats}}</h3>            \\r\\n          </div>\\r\\n          <div class=\\\"col-md-3 textMargin\\\">\\r\\n              <a (click) =\\\"registerToAttend()\\\" class=\\\"btn btn-sm btn-success\\\">Attending</a>\\r\\n              <a href=\\\"#\\\" class=\\\"btn btn-sm btn-primary pull-right\\\" routerLink=\\\"/dashboard\\\">Go to Dashboard</a>\\r\\n          </div>\\r\\n           <br/>               \\r\\n        </div>\\r\\n     </div>\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router, NavigationExtras  } from '@angular/router';\r\nimport { EventService } from '../services/event.service';\r\nimport { Event } from '../models/Event';\r\nimport { UserEventRegister } from '../models/UserEventRegister';\r\nimport { ToastrService } from '../services/toastr.service';\r\n\r\n@Component({\r\n  selector: 'app-events',\r\n  templateUrl: './events.component.html',\r\n  styleUrls: ['./events.component.css']\r\n})\r\nexport class EventsComponent implements OnInit {\r\n  \r\n  eventId: string;\r\n  event: Event = {\r\n    _id: '',\r\n    name: '',\r\n    venue: '',\r\n    date: '',\r\n    time: '',\r\n    seats: 0,\r\n    createdBy: ''\r\n  };\r\n\r\n  userEvent: UserEventRegister = {\r\n    userID: '',\r\n    eventID: ''\r\n  };\r\n\r\n  constructor(private route: ActivatedRoute,private eventService: EventService, private router: Router,\r\n    private showMessage: ToastrService) {}\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(\r\n      params => {this.eventId = params['eventID']})\r\n      \r\n   this.eventService.getEvent(this.eventId).subscribe(event=>{\r\n      this.event = event;\r\n    });    \r\n  }\r\n\r\n  registerToAttend() {\r\n    this.userEvent.userID = localStorage.getItem('userID');\r\n    this.userEvent.eventID = this.event._id;\r\n    this.eventService.registerToAttend(this.userEvent).subscribe( response => {\r\n    this.showMessage.showSuccess(\"You have successfully registered for the event!\");\r\n    this.router.navigate(['/dashboard']);\r\n    },\r\n      err=>{});\r\n  }\r\n  \r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- Footer -->\\r\\n<footer class=\\\"page-footer font-small bg-light fixed-bottom\\\">\\r\\n  \\r\\n    <!-- Copyright -->\\r\\n    <div class=\\\"footer-copyright text-center py-3\\\">© 2018 Copyright:\\r\\n      <a href=\\\"#\\\"> SydneyHappening.com</a>\\r\\n    </div>\\r\\n    <!-- Copyright -->\\r\\n  \\r\\n  </footer>\\r\\n  <!-- Footer -->\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<!--Navigation bar -->\\r\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\\\">\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarTogglerDemo01\\\" aria-controls=\\\"navbarTogglerDemo01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarTogglerDemo01\\\">\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Sydney Happeing</a>\\r\\n    <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" *ngIf = \\\"checkIfLoggedIn()\\\" routerLink=\\\"/dashboard\\\">Dashboard</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/about\\\">About Us</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/contact\\\">Contact Us</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <button class = \\\"Logout\\\" *ngIf = \\\"checkIfLoggedIn()\\\" routerLink=\\\"/\\\" (click) = \\\"logout()\\\">Logout</button>\\r\\n  </div>\\r\\n</nav>\\r\\n  \\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  \r\n  \r\n  checkIfLoggedIn() {\r\n    if(localStorage.getItem('token')) {\r\n      return true;\r\n    }\r\n    else \r\n      return false;\r\n  }\r\n\r\n  logout() {\r\n    console.log(\"inside logout\");\r\n    localStorage.clear();\r\n    console.log(localStorage.getItem('token'));\r\n  }\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".loginFormPosition{\\r\\n    margin-top:5em;\\r\\n}\\r\\n.alignHeader{\\r\\n    text-align:center;\\r\\n    margin-top: 2%;\\r\\n}\\r\\n.login-form{\\r\\n    background: #E8E4E4;\\r\\n    margin-top: 10%;\\r\\n    margin-bottom: 5%;\\r\\n    width: 70%;\\r\\n}\\r\\n\"","module.exports = \"\\r\\n            <div class=\\\"container login-form\\\" >\\r\\n              <form class=\\\"form-horizontal\\\" role=\\\"form\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)= \\\"validateLogin()\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-md-3\\\"></div>\\r\\n                      <div class=\\\"col-md-6\\\">\\r\\n                          <h3 class=\\\"alignHeader\\\">Welcome to Sydney Happening!!</h3>\\r\\n                          <hr>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-md-3\\\"></div>\\r\\n                      <div class=\\\"col-md-6\\\">\\r\\n                          <div class=\\\"form-group has-danger\\\">\\r\\n                              <label class=\\\"sr-only\\\" for=\\\"email\\\">E-Mail Address</label>\\r\\n                              <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\r\\n                                  <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-at\\\"></i></div>\\r\\n                                  <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\"\\r\\n                                        placeholder=\\\"you@example.com\\\" maxlength=\\\"30\\\" required>\\r\\n                                        <span class=\\\"text-danger align-middle\\\" *ngIf=\\\"isValid('email')\\\">*</span>\\r\\n                              </div>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-md-3\\\"></div>\\r\\n                      <div class=\\\"col-md-6\\\">\\r\\n                          <div class=\\\"form-group\\\">\\r\\n                              <label class=\\\"sr-only\\\" for=\\\"password\\\">Password</label>\\r\\n                              <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\r\\n                                  <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-key\\\"></i></div>\\r\\n                                  <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\"\\r\\n                                        placeholder=\\\"Password\\\" maxlength=\\\"30\\\" required>\\r\\n                                        <span class=\\\"text-danger align-middle\\\" *ngIf=\\\"isValid('password')\\\">*</span>\\r\\n                              </div>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\" style=\\\"padding-top: 1rem\\\">\\r\\n                      <div class=\\\"col-md-3\\\"></div>\\r\\n                      <div class=\\\"col-md-6\\\">\\r\\n                          <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block btn-success\\\" [disabled]=\\\"loginForm.invalid || isBusy\\\"><i class=\\\"fa fa-sign-in\\\"></i> Login</button>\\r\\n                          <span class=\\\"pull-right\\\"> Don't have an account? <a class=\\\"btn btn-link\\\" routerLink=\\\"/registration\\\">Signup</a></span>\\r\\n                      </div>\\r\\n                  </div>\\r\\n              </form>\\r\\n          </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { LoginData } from '../models/loginData';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { ToastrService } from '../services/toastr.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n     \r\n  loginForm: FormGroup;\r\n  isBusy: boolean = false;\r\n  constructor(private authenticationService: AuthenticationService, private showMessage: ToastrService, private router: Router) { \r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl(null, Validators.email),\r\n      password: new FormControl(null, Validators.required)      \r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.checkIfLoggedIn();\r\n  }\r\n\r\n  checkIfLoggedIn() {\r\n    \r\n    this.authenticationService.checkIfLoggedIn().subscribe ( response => {\r\n      this.router.navigate(['/dashboard']);\r\n    }, \r\n    err => {  \r\n     if(err.status == 400) {\r\n      //The token though present in local storage has expired or not present. \r\n      //clear localStorage here. \r\n      localStorage.clear();\r\n     }\r\n    });\r\n  }\r\n\r\n  isValid(controlName) {\r\n    return this.loginForm.get(controlName).invalid && this.loginForm.get(controlName).touched;\r\n  }\r\n\r\n  validateLogin() {\r\n    this.isBusy = true;\r\n    if(this.loginForm.valid) {\r\n      this.authenticationService.validateLogin(this.loginForm.value).subscribe(response => {\r\n        localStorage.setItem('token', response.token);\r\n        localStorage.setItem('userID', response.userID);\r\n        localStorage.setItem('firstName', response.firstName);\r\n        localStorage.setItem('email', response.email);\r\n        localStorage.setItem('IsAdmin', response.IsAdmin.toString());\r\n        this.showMessage.showSuccess(\"You have successfully logged in\");\r\n        this.isBusy = false;\r\n        this.router.navigate(['/dashboard']);  \r\n      }, err => {\r\n        this.showMessage.showError(err.error);\r\n      }); \r\n    }\r\n \r\n  }\r\n\r\n}\r\n","module.exports = \".alignHeader{\\r\\n    text-align:center;\\r\\n    margin-top: 2%;\\r\\n}\\r\\n.registration-form{\\r\\n    background: #E8E4E4;\\r\\n    margin-top: 10%;\\r\\n    margin-bottom: 5%;\\r\\n    width: 70%;\\r\\n}\"","module.exports = \" \\r\\n  <div class=\\\"container registration-form\\\" >\\r\\n    <form class=\\\"form-horizontal\\\" role=\\\"form\\\" [formGroup]=\\\"registerationForm\\\" (ngSubmit)= \\\"validateAndRegister()\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <h2 class=\\\"alignHeader\\\">Register</h2>\\r\\n                <hr>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group has-danger\\\">\\r\\n                    <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\r\\n                        <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-user\\\"></i></div>\\r\\n                        <input type=\\\"text\\\" name=\\\"firstName\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" \\r\\n                              placeholder=\\\"First Name\\\" formControlName = \\\"firstName\\\" maxlength=\\\"30\\\" autofocus>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n                <div class=\\\"form-control-feedback\\\">\\r\\n                    <span *ngIf = \\\"isValid('firstName')\\\" class=\\\"text-danger align-middle\\\">\\r\\n                        <i class=\\\"fa fa-close\\\"></i> First Name is required. \\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group has-danger\\\">\\r\\n                    <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\r\\n                        <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-user\\\"></i></div>\\r\\n                        <input type=\\\"text\\\" name=\\\"lastName\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" formControlName = \\\"lastName\\\"\\r\\n                              placeholder=\\\"Last Name\\\" maxlength=\\\"30\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n                <div class=\\\"form-control-feedback\\\">\\r\\n                    <span *ngIf = \\\"isValid('lastName')\\\" class=\\\"text-danger align-middle\\\">\\r\\n                        <i class=\\\"fa fa-close\\\"></i> Last Name is required.\\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group has-danger\\\">\\r\\n                    <label class=\\\"sr-only\\\" for=\\\"email\\\">E-Mail Address</label>\\r\\n                    <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\r\\n                        <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-at\\\"></i></div>\\r\\n                        <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" formControlName = \\\"email\\\"\\r\\n                              placeholder=\\\"you@example.com\\\" required  maxlength=\\\"30\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n                <div class=\\\"form-control-feedback\\\">\\r\\n                    <span *ngIf = \\\"isValid('email')\\\" class=\\\"text-danger align-middle\\\">\\r\\n                        <i class=\\\"fa fa-close\\\"></i> Email is required. \\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"sr-only\\\" for=\\\"password\\\">Password</label>\\r\\n                    <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\r\\n                        <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-key\\\"></i></div>\\r\\n                        <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" formControlName = \\\"password\\\"\\r\\n                              placeholder=\\\"Password\\\" maxlength=\\\"30\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n                <div class=\\\"form-control-feedback\\\">\\r\\n                    <span *ngIf = \\\"isValid('password')\\\" class=\\\"text-danger align-middle\\\">   \\r\\n                    Password field is mandatory.  \\r\\n                    </span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-3\\\"></div>\\r\\n          <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"sr-only\\\" for=\\\"password\\\">Confirm Password</label>\\r\\n                  <div class=\\\"input-group mb-2 mr-sm-2 mb-sm-0\\\">\\r\\n                      <div class=\\\"input-group-addon\\\" style=\\\"width: 2.6rem\\\"><i class=\\\"fa fa-key\\\"></i></div>\\r\\n                      <input type=\\\"password\\\" name=\\\"confirmPassword\\\" class=\\\"form-control\\\" id=\\\"confirmPassword\\\" \\r\\n                      formControlName = \\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\"maxlength=\\\"30\\\" >\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n              <div class=\\\"form-control-feedback\\\">\\r\\n                  <span *ngIf = \\\"isValid('confirmPassword')\\\"class=\\\"text-danger align-middle\\\">\\r\\n                  Password and confirm password do not match.     \\r\\n                  </span>\\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n\\r\\n        <div class=\\\"row\\\" style=\\\"padding-top: 1rem\\\">\\r\\n            <div class=\\\"col-md-3\\\"></div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block btn-primary\\\" [disabled]=\\\"registerationForm.invalid || isBusy\\\"><i class=\\\"fa fa-sign-in\\\"></i> Register</button>\\r\\n                <span class=\\\"pull-right\\\"> Already have an account? <a class=\\\"btn btn-link\\\" routerLink=\\\"/\\\">Sign in</a></span>                \\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { RegisterationData } from '../models/registerationData';\r\nimport { AbstractControl, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { RegisterationService } from '../services/registeration.service';\r\nimport { ToastrService } from '../services/toastr.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent {\r\n\r\n  registerationForm: FormGroup;\r\n  isBusy:boolean = false;\r\n\r\n  constructor(private registerationService: RegisterationService, private showMessage: ToastrService, private router: Router) {\r\n    this.registerationForm = new FormGroup({\r\n      firstName: new FormControl(null, Validators.required),\r\n      lastName: new FormControl(null, Validators.required),\r\n      email: new FormControl(null, Validators.email),\r\n      password: new FormControl(null, Validators.required),\r\n      confirmPassword: new FormControl(null, this.passwordValidator),\r\n      IsAdmin: new FormControl(false)\r\n    });\r\n   \r\n    //subscribe to value changes of the password field so that confirm password check happens again. \r\n    this.registerationForm.controls.password.valueChanges\r\n    .subscribe(\r\n      x => this.registerationForm.controls.confirmPassword.updateValueAndValidity()\r\n    );\r\n\r\n   }\r\n\r\n   isValid(controlName) {\r\n    return this.registerationForm.get(controlName).invalid && this.registerationForm.get(controlName).touched;\r\n  }\r\n  validateAndRegister() {\r\n    this.isBusy =true;\r\n    const captcha =\"\";\r\n    if(this.registerationForm.valid) {\r\n      this.registerationService.registerUser(this.registerationForm.value,captcha).subscribe(data =>{\r\n        if(data == 'EC1') {\r\n          this.showMessage.showError(\"This email is already registered.\");\r\n        }\r\n        else {\r\n          this.showMessage.showSuccess(\"User registered, please login\")\r\n          this.router.navigate(['']);\r\n        }\r\n        this.isBusy=false;\r\n      },\r\n      error => {\r\n        this.showMessage.showError(\"Error registering user, please try again\");\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  passwordValidator(control: AbstractControl) {\r\n    if (control && (control.value !== null || control.value !== undefined)) {\r\n      const confirmPassword = control.value;\r\n      const passControl = control.root.get('password');\r\n      if (passControl) {\r\n        const passValue = passControl.value;\r\n        if (passValue !== confirmPassword || passValue === '') {\r\n          return {\r\n            isError: true\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private auth: AuthenticationService, private router: Router) {}\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n      if(this.auth.isLoggedIn()){\r\n        return true;\r\n      }\r\n      else {\r\n        //redirect to login screen.\r\n        this.router.navigate(['']);\r\n      }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { catchError, tap, map } from 'rxjs/operators';\r\nimport { environment } from \"../../environments/environment\";\r\n\r\ninterface AuthenticationReponse {\r\n  loginStatus: boolean;\r\n  token: string;\r\n  userID: string,\r\n  firstName: string;\r\n  email: string;\r\n  IsAdmin: boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  apiUrl : string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.apiUrl = `${environment.domainURL}` + '/users';\r\n   }\r\n\r\n  validateLogin(validateLogin) {\r\n    return this.http.post<AuthenticationReponse>(this.apiUrl +'/login', validateLogin);    \r\n  }\r\n\r\n  isLoggedIn() {\r\n    if(localStorage.getItem('token') === null) {\r\n      return false;\r\n    }\r\n    else\r\n      return true;\r\n  }\r\n\r\n    //verify if the token has expired or not. \r\n  checkIfLoggedIn() {\r\n    const headers = new HttpHeaders().append(\"token\", localStorage.getItem('token'));\r\n    return this.http.get(this.apiUrl + '/validateToken', {headers});\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Client Side or Network error\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError('Something bad happened; please try again later.');\r\n  };\r\n\r\n\r\n  private extractData(res: Response) {\r\n    let body = res.json();\r\n    return body || { };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { catchError, tap, map } from 'rxjs/operators';\r\nimport { environment } from \"../../environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmailService {\r\n\r\n  apiUrl : string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.apiUrl = `${environment.domainURL}` + '/emails';\r\n   }\r\n\r\n   sendEmail(message) {\r\n    return this.http.post(this.apiUrl + '/sendEmail', message);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { catchError, tap, map } from 'rxjs/operators';\r\nimport { Event } from \"../models/Event\";\r\nimport { environment } from \"../../environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class EventService {\r\n\r\n  apiUrl : string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.apiUrl = `${environment.domainURL}` + '/events';\r\n  }\r\n\r\n  getEvents(): Observable<any> {\r\n    const headers = new HttpHeaders().append(\"token\", localStorage.getItem('token'));\r\n    return this.http.get(this.apiUrl, {headers});\r\n  } \r\n  \r\n  getEvent(eventID: string): Observable<any> {\r\n    const headers = new HttpHeaders().append(\"token\", localStorage.getItem('token'));\r\n    return this.http.get(`${this.apiUrl}/${eventID}`, {headers});\r\n  }\r\n  addEvent(data): Observable<any> {\r\n    const headers = new HttpHeaders().append(\"token\", localStorage.getItem('token'));\r\n    return this.http.post(this.apiUrl, data, {headers});\r\n  }\r\n\r\n  updateEvent(eventID, event):Observable<any>\r\n  {\r\n    const headers = new HttpHeaders().append(\"token\", localStorage.getItem('token'));\r\n    return this.http.patch(`${this.apiUrl}/${eventID}`,event, {headers});\r\n  }\r\n\r\n  deleteEvent(eventID: string): Observable<any> {\r\n    const headers = new HttpHeaders().append(\"token\", localStorage.getItem('token'));\r\n    return this.http.delete(`${this.apiUrl}/${eventID}`, {headers});\r\n  }\r\n\r\n  registerToAttend(userEventRegister) {\r\n    const headers = new HttpHeaders().append(\"token\", localStorage.getItem('token'));\r\n    return this.http.post(this.apiUrl + '/registerToAttend', userEventRegister, {headers});\r\n  }\r\n\r\n  getUserEvents(userData) {\r\n    const headers = new HttpHeaders().append(\"token\", localStorage.getItem('token'));\r\n    return this.http.post(this.apiUrl + '/getUserEvents', userData, {headers});\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { catchError, tap, map } from 'rxjs/operators';\r\nimport { environment } from \"../../environments/environment\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegisterationService {\r\n\r\n  apiUrl : string;\r\n\r\n  constructor(private http: Http) { \r\n    this.apiUrl = `${environment.domainURL}` + '/users/register';\r\n  }\r\n\r\n  registerUser(registerationData,captcha) {\r\n    console.log(registerationData);\r\n    const userData={\r\n      registerationData: registerationData,\r\n      captcha: captcha\r\n    }\r\n    console.log(userData);\r\n    console.log(this.apiUrl);\r\n      return this.http.post(this.apiUrl, userData).pipe(\r\n        map(this.extractData),\r\n        catchError(this.handleError));;\r\n  }\r\n\r\n\r\n  private extractData(res: Response) {\r\n    let body = res.json();\r\n    return body || { };\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Client Side or Network error\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError('Something bad happened; please try again later.');\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { map } from \"rxjs/operators\";\nimport { ToastaService, ToastaConfig, ToastaComponent, ToastOptions, ToastData } from 'ngx-toasta';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastrService {\n\n  constructor(public toastr: ToastaService) { }\n\n\n  showSuccess(message) {\n    let toastOptions: ToastOptions = {\n      title : 'Success!',\n      msg: message,\n      showClose: true,\n      timeout: 5000,\n      theme:'bootstrap'\n    }\n    return this.toastr.success(toastOptions);\n  }\n  \n  showError(message) {\n    let toastOptions: ToastOptions = {\n      title : 'Oops!',\n      msg: message,\n      showClose: true,\n      timeout: 5000,\n      theme:'bootstrap'\n    }\n    return this.toastr.error(toastOptions);\n  }\n  \n  showWarning(message) {\n    let toastOptions: ToastOptions = {\n      title : 'Alert!',\n      msg: message,\n      showClose: true,\n      timeout: 5000,\n      theme:'bootstrap'\n    }\n    return this.toastr.warning(toastOptions);\n  }\n  \n  showInfo(message) {\n    let toastOptions: ToastOptions = {\n      title : 'Info!',\n      msg: message,\n      showClose: true,\n      timeout: 5000,\n      theme:'bootstrap'\n    }\n    return this.toastr.info(message);\n  }\n\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  name: '',\r\n  domainURL: 'http://localhost:3000'\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}